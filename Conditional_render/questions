// lops
// Write a function that takes a number n and prints all numbers from 1 to n.
// Write a function that takes an array of numbers and prints each number.
// Write a function that takes a number n and prints the first n Fibonacci numbers.
// Write a function that takes an array of numbers and prints the sum of all the numbers.
// Write a function that takes an array of numbers and prints only the even numbers.
// Write a function that takes a string and prints each character of the string.
// Write a function that takes an array of numbers and prints the maximum number in the array.
// Write a function that takes a number n and prints a right-angle triangle pattern of * of n rows.
// Write a function that takes an array of strings and prints each string in uppercase.
// Write a function that takes a number n and prints the multiplication table for n up to 10.

// array
// Write a function that takes a string and returns the most frequent character in the string.
// Write a function that takes two arrays and returns a new array with elements that are present in both arrays.
// Write a function that takes an array of objects and returns a new array with the objects sorted by a specified key.
// Write a function that takes a string and returns true if the string is a palindrome, and false otherwise.
// Write a function that takes an array of numbers and returns the sum of all odd numbers.
// Write a function that takes an array of numbers and returns the product of all the numbers.
// Write a function that takes an array of strings and returns a new array with the lengths of each string.
// Write a function that takes an array of numbers and returns a new array with the numbers squared.
// Write a function that takes an array of numbers and returns the average of all the numbers.
// Write a function that takes an array of strings and returns a new array with only the strings that start with a specified letter.
// Write a function that takes a two-dimensional array (array of arrays) and flattens it into a one-dimensional array.
// Write a function that takes an array of numbers and returns the smallest number in the array.
// Write a function that takes an array of strings and returns the longest string in the array.


// object =====

// Write a function that takes an object and returns an array of its keys.
// Write a function that takes an object and returns an array of its values.
// Write a function that takes two objects and returns a new object that combines the properties of both. If the same key exists in both objects, the value from the second object should be used.
// Write a function that takes an object and returns a new object with the keys and values swapped.
// Write a function that takes an array of objects and a key, and returns an array of the values corresponding to that key in each object.
// Write a function that takes an object and a key, and returns true if the key exists in the object, and false otherwise.
// Write a function that takes an object and returns the number of key-value pairs in the object.
// Write a function that takes an array of objects and a key, and returns a new array of objects sorted by the values corresponding to that key.
// Write a function that takes an object and returns a new object with only the properties that have string values.





